     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 0200                        a dw 2 
    14 00000002 0300                        b dw 3
    15 00000004 0400                        c dw 4
    16 00000006 0100                        d dw 1
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ;a,b,c,d - word 1.(c+b+a)-(d+d)
    22                                      
    23 00000000 66A1[00000000]                  mov ax,[a]
    24 00000006 668B1D[02000000]                mov bx,[b]
    25 0000000D 6601D8                          add ax,bx
    26 00000010 668B1D[04000000]                mov bx,[c]
    27 00000017 6601D8                          add ax,bx
    28 0000001A 668B1D[06000000]                mov bx,[d]
    29 00000021 668B0D[06000000]                mov cx,[d]
    30 00000028 6601CB                          add bx,cx
    31 0000002B 6629D8                          sub ax,bx
    32 0000002E 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    33 00000030 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
