     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 02                          a db 2
    14 00000001 04                          b db 4
    15 00000002 02                          c db 2
    16 00000003 02                          doi db 2
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; a,b,c - byte, d - word      16.(a+b)/2 + (10-a/c)+b/4
    22 00000000 66B80000                        mov ax,0
    23 00000004 A0[00000000]                    mov al,[a]; unsigned conversion from byte to word
    24 00000009 0205[01000000]                  add al,[b]
    25 0000000F F635[03000000]                  div byte[doi]; al: (a+b)/2
    26 00000015 88C3                            mov bl,al ; bl:(a+b)/2
    27 00000017 66B80000                        mov ax,0
    28 0000001B A0[00000000]                    mov al,[a]
    29 00000020 F635[02000000]                  div byte[c] ; al:a/c
    30 00000026 B10A                            mov cl,10
    31 00000028 28C1                            sub cl,al ; cl:10-a/c
    32 0000002A 00CB                            add bl,cl ;bl: (a+b)/2 + (10-a/c)
    33 0000002C 66B80000                        mov ax,0
    34 00000030 A0[01000000]                    mov al,[b]
    35 00000035 B104                            mov cl,4
    36 00000037 F6F1                            div cl; al:b/4
    37 00000039 00D8                            add al,bl ; al: (a+b)/2 + (10-a/c)+b/4
    38                                          
    39                                          
    40                                          
    41                                          
    42                                      
    43                                          ; exit(0)
    44 0000003B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    45 0000003D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
