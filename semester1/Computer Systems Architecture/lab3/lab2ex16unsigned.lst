     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 01                          a db 1
    14 00000001 0100                        b dw 1
    15 00000003 07000000                    c dd 7
    16                                  
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20                                          ; a - byte, b - word, c - double word, d - qword - Unsigned representation      16.c-a-(b+a)+c
    21                                      
    22 00000000 A1[03000000]                    mov eax,[c]
    23 00000005 BB00000000                      mov ebx,0
    24 0000000A 8A1D[00000000]                  mov bl,[a]
    25 00000010 29D8                            sub eax,ebx; eax:c-a
    26 00000012 BB00000000                      mov ebx,0
    27 00000017 668B1D[01000000]                mov bx,[b]
    28 0000001E 66B90000                        mov cx,0
    29 00000022 8A0D[00000000]                  mov cl,[a]
    30 00000028 6601CB                          add bx,cx; bx:b+a
    31 0000002B 29D8                            sub eax,ebx; eax: c-a-(b+a)
    32 0000002D 8B1D[03000000]                  mov ebx,[c]
    33 00000033 01D8                            add eax,ebx; eax:c-a-(b+a)+c
    34 00000035 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    35 00000037 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
