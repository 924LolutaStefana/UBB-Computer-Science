     1                                  ;x/2+100*(a+b)-3/(c+d)+e*e; a,c-word; b,d-byte; e-doubleword; x-qword
     2                                  ;UNSIGNED
     3                                  bits 32 
     4                                  global  start 
     5                                  
     6                                  extern  exit
     7                                  
     8                                  import  exit msvcrt.dll
     9                                          
    10                                  segment  data use32 class=data 
    11 00000000 2C01                    	a dw 300
    12 00000002 09                          b db 9
    13 00000003 9001                        c dw 400
    14 00000005 05                          d db 5
    15 00000006 F4010000                    e dd 500
    16 0000000A 2003000000000000            x dq 800
    17                                      
    18                                     
    19                                  segment  code use32 class=code ; code segment
    20                                  start: 
    21                                     
    22                                   
    23 00000000 B900000000                  mov ecx,0
    24 00000005 BB00000000                  mov ebx,0
    25 0000000A B800000000                  mov eax,0
    26 0000000F BA00000000                  mov edx,0
    27 00000014 A0[02000000]                mov al,[b]
    28 00000019 B400                        mov ah,0
    29 0000001B 660305[00000000]            add ax,[a] ; ax->a+b
    30 00000022 66BB6400                    mov bx,100
    31 00000026 66F7E3                      mul bx; dx:ax-> 100*(a+b)
    32                                     
    33 00000029 6689D1                      mov cx,dx
    34 0000002C 6689C3                      mov bx,ax ; cx:bx-> 100*(a+b)
    35 0000002F 8A15[05000000]              mov dl,[d]
    36 00000035 B600                        mov dh,0
    37 00000037 660315[03000000]            add dx,[c] ; dx-> c+d
    38 0000003E B803000000                  mov eax,3
    39                                      ;mov dx,0
    40 00000043 66F7F2                      div dx ; dx:ax->3/(c+d)
    41 00000046 6629D1                      sub cx,dx
    42 00000049 6629C3                      sub bx,ax ; cx:bx-> 100*(a+b)-3/(c+d)
    43 0000004C A1[05000000]                mov eax,[d]
    44 00000051 F7E0                        mul eax; edx:eax->d*d
    45 00000053 01D1                        add ecx,edx
    46 00000055 01C3                        add ebx,eax;ecx:ebx-> 100*(a+b)-3/(c+d) + d*d
    47 00000057 A1[0A000000]                mov eax,[x+0]
    48 0000005C BA02000000                  mov edx,2
    49 00000061 F7F2                        div edx ; edx:eax-> x/2
    50 00000063 01D8                        add eax,ebx
    51 00000065 01CA                        add edx,ecx ;edx:eax-> x/2 +100*(a+b)-3/(c+d) + d*d
    52 00000067 6A00                        push   dword 0 
    53 00000069 FF15[00000000]          	call   [exit] 
