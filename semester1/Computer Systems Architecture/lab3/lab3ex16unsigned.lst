     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 01                          a db 1
    14 00000001 0100                        b dw 1
    15 00000003 07000000                    c dd 7
    16                                  
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20                                          ; a - byte, b - word, c - double word, d - qword - Unsigned representation      16.c-a-(b+a)+c
    21                                      
    22 00000000 A1[03000000]                    mov eax,[c]
    23 00000005 8A1D[00000000]                  mov bl,[a]
    24 0000000B B700                            mov BH,0 
    25 0000000D 66B90000                        mov CX,0 
    26 00000011 6651                            push cx
    27 00000013 6653                            push bx
    28 00000015 5B                              pop ebx
    29                                     
    30 00000016 29D8                            sub eax,ebx; eax:c-a
    31 00000018 668B1D[01000000]                mov bx,[b]
    32 0000001F 8A0D[00000000]                  mov cl,[a]
    33 00000025 B500                            mov CH,0 
    34 00000027 6601CB                          add bx,cx; bx:b+a
    35 0000002A 66B90000                        mov CX,0  
    36 0000002E 6651                            push cx
    37 00000030 6653                            push bx
    38 00000032 5B                              pop ebx
    39 00000033 29D8                            sub eax,ebx; eax: c-a-(b+a)
    40 00000035 8B1D[03000000]                  mov ebx,[c]
    41 0000003B 01D8                            add eax,ebx; eax:c-a-(b+a)+c
    42 0000003D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    43 0000003F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
